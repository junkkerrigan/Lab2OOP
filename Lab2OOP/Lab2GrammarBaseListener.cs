//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Lab2Grammar.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILab2GrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class Lab2GrammarBaseListener : ILab2GrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Lab2GrammarParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnit([NotNull] Lab2GrammarParser.UnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Lab2GrammarParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnit([NotNull] Lab2GrammarParser.UnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Dec</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDec([NotNull] Lab2GrammarParser.DecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Dec</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDec([NotNull] Lab2GrammarParser.DecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMod([NotNull] Lab2GrammarParser.ModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Mod</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMod([NotNull] Lab2GrammarParser.ModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Brackets</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBrackets([NotNull] Lab2GrammarParser.BracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Brackets</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBrackets([NotNull] Lab2GrammarParser.BracketsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AdditionOrSubtraction</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionOrSubtraction([NotNull] Lab2GrammarParser.AdditionOrSubtractionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditionOrSubtraction</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionOrSubtraction([NotNull] Lab2GrammarParser.AdditionOrSubtractionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] Lab2GrammarParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] Lab2GrammarParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicationOrDivision</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationOrDivision([NotNull] Lab2GrammarParser.MultiplicationOrDivisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicationOrDivision</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationOrDivision([NotNull] Lab2GrammarParser.MultiplicationOrDivisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CellRef</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCellRef([NotNull] Lab2GrammarParser.CellRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CellRef</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCellRef([NotNull] Lab2GrammarParser.CellRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] Lab2GrammarParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] Lab2GrammarParser.PowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NegNum</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegNum([NotNull] Lab2GrammarParser.NegNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegNum</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegNum([NotNull] Lab2GrammarParser.NegNumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Inc</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInc([NotNull] Lab2GrammarParser.IncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Inc</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInc([NotNull] Lab2GrammarParser.IncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Invalid</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvalid([NotNull] Lab2GrammarParser.InvalidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Invalid</c>
	/// labeled alternative in <see cref="Lab2GrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvalid([NotNull] Lab2GrammarParser.InvalidContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
